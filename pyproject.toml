[build-system]
requires = ["setuptools>=65.5.1", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agentosx"
version = "0.1.0"
description = "Production-ready, MCP-native multi-agent framework for building, orchestrating, and governing agents at scale"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "AgentOSX Team", email = "team@agentosx.dev"}
]
maintainers = [
    {name = "AgentOSX Team", email = "team@agentosx.dev"}
]
keywords = [
    "agents",
    "mcp",
    "model-context-protocol",
    "multi-agent",
    "orchestration",
    "ai",
    "llm",
    "framework",
    "agentos"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed",
]

dependencies = [
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "watchfiles>=0.21.0",
    "prompt-toolkit>=3.0.0",
    "httpx>=0.25.0",
    "python-socketio[client]>=5.10.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
]

[project.optional-dependencies]
# Full installation with all optional dependencies
all = [
    "websockets>=11.0.0",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "google-generativeai>=0.3.0",
    "chromadb>=0.4.0",
    "discord.py>=2.3.0",
    "python-telegram-bot>=20.0",
]

# Development dependencies
dev = [
    "black>=23.0.0",
    "mypy>=1.5.0",
    "isort>=5.12.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "safety>=3.0.0",
    "pre-commit>=3.0.0",
]

# AgentOS integration
agentos = [
    "httpx>=0.25.0",
    "python-socketio[client]>=5.10.0",
]

# Marketplace features
marketplace = [
    "httpx>=0.25.0",
]

# WebSocket support
websockets = [
    "websockets>=11.0.0",
]

# LLM providers
llm = [
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "google-generativeai>=0.3.0",
]

# Vector databases
vectordb = [
    "chromadb>=0.4.0",
]

# Social platforms
social = [
    "discord.py>=2.3.0",
    "python-telegram-bot>=20.0",
]

[project.urls]
Homepage = "https://github.com/theagentic/agentOSX"
Documentation = "https://github.com/theagentic/agentOSX/tree/main/docs"
Repository = "https://github.com/theagentic/agentOSX"
"Bug Tracker" = "https://github.com/theagentic/agentOSX/issues"
Changelog = "https://github.com/theagentic/agentOSX/blob/main/CHANGELOG.md"

[project.scripts]
agentosx = "agentosx.cli.main:app"

[tool.setuptools]
package-dir = {"" = "."}
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["agentosx*"]
exclude = ["tests*", "docs*", "examples*", "agents*"]

[tool.setuptools.package-data]
agentosx = [
    "py.typed",
    "**/*.yaml",
    "**/*.yml",
    "**/*.json",
    "cli/templates/**/*",
]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | __pycache__
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true

# mypy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "socketio.*",
    "websockets.*",
    "chromadb.*",
    "discord.*",
    "telegram.*",
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow tests (deselect with '-m \"not slow\"')",
    "mcp: MCP protocol tests",
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["agentosx"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
